{"version":3,"sources":["components/Card.module.scss","components/Pagination.module.scss","components/FilterByTitle.module.scss","components/Button.module.scss","components/Grid.module.scss","components/Container.module.scss","api/api.ts","components/Button.tsx","components/Card.tsx","components/Grid.tsx","components/ProductList.tsx","components/Container.tsx","components/Pagination.tsx","components/FilterByTitle.tsx","App.tsx","index.tsx"],"names":["module","exports","getProducts","a","fetch","response","json","Button","props","type","content","onClick","className","styles","button","Card","product","card","card__title","title","price","card__description","description","Grid","grid","children","ProductList","products","loadingStatus","map","id","Container","container","Pagination","productsPerPage","productsNumber","onPaginationListItem","paginationLength","Math","ceil","paginationList","i","push","item","href","FilterByTitle","onFilter","useState","filterBy","setFilterBy","isClearFilter","setIsClearFilter","form","onSubmit","event","preventDefault","value","onChange","target","form__field","placeholder","App","setProducts","filteredProducts","setFilteredProducts","isLoading","setIsLoading","currentPage","setCurrentPage","useEffect","productsFromApi","currentPageFirstProductIndex","currentPageLastProductIndex","currentPageProducts","slice","currentFilteredProducts","filter","toLowerCase","includes","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,0BAA0B,kBAAkB,8BAA8B,kBAAoB,kC,kBCAxJD,EAAOC,QAAU,CAAC,kBAAkB,oCAAoC,wBAAwB,4C,iBCAhGD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,YAAc,qC,iBCAnED,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,kKCCjBC,G,MAAW,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,GAAD,OAHb,wBAGa,cADH,cACnBC,EADmB,yBAGlBA,EAASC,QAHS,2CAAH,sD,wBCQXC,EAA0B,SAACC,GACtC,IAAQC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QAEvB,OACE,wBAAQF,KAAe,WAATA,EAAoB,SAAW,SAAUG,UAAWC,IAAOC,OAAQH,QAASA,EAA1F,SACGD,K,gBCNMK,EAAwB,SAACP,GACpC,IAAQQ,EAAYR,EAAZQ,QAER,OACE,qBAAIJ,UAAWC,IAAOI,KAAtB,UACE,oBAAIL,UAAWC,IAAOK,YAAtB,SAAoCF,EAAQG,QAC5C,mBAAGP,UAAWC,IAAO,mBAArB,oBAA8CG,EAAQI,SACtD,mBAAGR,UAAWC,IAAOQ,kBAArB,SAAyCL,EAAQM,cACjD,cAAC,EAAD,CAAQb,KAAK,SAASC,QAAQ,SAC9B,cAAC,EAAD,CAAQD,KAAK,SAASC,QAAQ,WAC9B,cAAC,EAAD,CAAQD,KAAK,SAASC,QAAQ,oB,iBCZvBa,EAAwB,SAACf,GACpC,OACE,qBAAKI,UAAWC,IAAOW,KAAvB,SAA8BhB,EAAMiB,YCC3BC,EAA+B,SAAClB,GAC3C,IAAQmB,EAA4BnB,EAA5BmB,SAER,OAFoCnB,EAAlBoB,cAId,oDAKF,6BACE,cAAC,EAAD,UACGD,EAASE,KAAI,SAAAb,GAAO,OACnB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQc,Y,iBChBlCC,EAA6B,SAACvB,GACzC,OACE,qBAAKI,UAAWC,IAAOmB,UAAvB,SAAmCxB,EAAMiB,Y,gBCAhCQ,EAA8B,SAACzB,GAQ1C,IAPA,IAAQ0B,EAA0D1B,EAA1D0B,gBAAiBC,EAAyC3B,EAAzC2B,eAAgBC,EAAyB5B,EAAzB4B,qBAEnCC,EAAmBC,KAAKC,KAAKJ,EAAiBD,GAE9CM,EAAiB,GAGdC,EAAI,EAAGA,GAAKJ,EAAkBI,IACrCD,EAAeE,KAAKD,GAGtB,OACE,oBAAI7B,UAAWC,IAAO,mBAAtB,SACG2B,EAAeX,KAAI,SAAAc,GAAI,OACtB,oBAAe/B,UAAWC,IAAO,yBAAjC,SACE,mBACE+B,KAAK,KACLhC,UAAWC,IAAO,yBAClBF,QAAS,kBAAMyB,EAAqBO,IAHtC,SAKGA,KANIA,S,iBChBJE,EAAiC,SAACrC,GAC7C,IAAQsC,EAAatC,EAAbsC,SAER,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,OACE,uBACEvC,UAAWC,IAAOuC,KAClBC,SAAU,SAACC,GACTA,EAAMC,iBACFP,GACFG,GAAiB,GAGnBL,EAASE,IARb,UAWGE,GACC,cAAC,EAAD,CACEzC,KAAK,SACLC,QAAQ,eACRC,QAAS,WACPsC,EAAY,IACZH,EAAS,IACTK,GAAiB,MAIvB,uBACE1C,KAAK,OACL+C,MAAOR,EACPS,SAAU,SAACH,GACTL,EAAYK,EAAMI,OAAOF,QAE3B5C,UAAWC,IAAO8C,YAClBC,YAAY,4BAEd,cAAC,EAAD,CAAQnD,KAAK,SAASC,QAAQ,eCrCvBmD,EAAgB,WAC3B,MAAgCd,mBAAoB,IAApD,mBAAOpB,EAAP,KAAiBmC,EAAjB,KACA,EAAgDf,mBAAoB,IAApE,mBAAOgB,EAAP,KAAyBC,EAAzB,KACA,EAAkCjB,oBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAsCnB,mBAAS,GAA/C,mBAAOoB,EAAP,KAAoBC,EAApB,KACA,EAA0BrB,mBAAS,IAA5Bb,EAAP,oBAEAmC,qBAAU,WACR,sBAAC,4BAAAlE,EAAA,6DACC+D,GAAa,GADd,SAE+BhE,IAF/B,OAEOoE,EAFP,OAICJ,GAAa,GACbJ,EAAYQ,GACZN,EAAoBM,GANrB,0CAAD,KAQC,IAEH,IAYMC,EAA+BJ,EAAcjC,EAAkBA,EAC/DsC,EAA8BL,EAAcjC,EAC5CuC,EAAsBV,EACzBW,MAAMH,EAA8BC,GAEvC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAe1B,SAfG,SAAC3B,GACrB,IAAMwD,EAA0B,YAAIhD,GAAUiD,QAAO,SAAC5D,GACpD,OAAOA,EAAQG,MAAM0D,cAAcC,SAAS3D,EAAM0D,kBAGpDb,EAAoBW,MAWlB,cAAC,EAAD,CAAahD,SAAU8C,EAAqB7C,cAAeqC,IAC3D,cAAC,EAAD,CACE/B,gBAAiBA,EACjBC,eAAgB4B,EAAiBgB,OACjC3C,qBAxBoB,SAAC4C,GACzBZ,EAAeY,UCvBnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.84f50ec0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__gD9xj\",\"card__title\":\"Card_card__title__1aMv_\",\"card__price-tag\":\"Card_card__price-tag__3Ib7R\",\"card__description\":\"Card_card__description__3JhAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination-list\":\"Pagination_pagination-list__2-Lsw\",\"pagination-list__link\":\"Pagination_pagination-list__link__3jh-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterByTitle_form__3r0PF\",\"form__field\":\"FilterByTitle_form__field__EUYw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2MIOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__9YPYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2MQv2\"};","const BASE_URL = 'http://localhost:3000';\n\nexport const getProducts = async () => {\n  const response = await fetch(`${BASE_URL}/products`);\n\n  return response.json();\n};\n","import React from 'react';\nimport styles from './Button.module.scss';\n\ntype Props = {\n  children?: React.ReactNode;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  type: 'submit' | 'reset' | 'button';\n  content: string;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const { type, content, onClick } = props;\n\n  return (\n    <button type={type === 'submit' ? 'submit' : 'button'} className={styles.button} onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Product } from '../types/Product';\nimport { Button } from './Button';\nimport styles from './Card.module.scss';\n\ntype Props = {\n  product: Product;\n};\n\nexport const Card: React.FC<Props> = (props) => {\n  const { product } = props;\n\n  return (\n    <li className={styles.card}>\n      <h2 className={styles.card__title}>{product.title}</h2>\n      <p className={styles['card__price-tag']}>{`$${product.price}`}</p>\n      <p className={styles.card__description}>{product.description}</p>\n      <Button type=\"button\" content=\"Edit\" />\n      <Button type=\"button\" content=\"Delete\" />\n      <Button type=\"button\" content=\"Add to cart\" />\n    </li>\n  );\n};\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport const Grid: React.FC<Props> = (props) => {\n  return (\n    <div className={styles.grid}>{props.children}</div>\n  );\n};\n","import React from 'react';\nimport { Card } from './Card';\nimport { Product } from '../types/Product';\nimport { Grid } from './Grid';\n\ntype Props = {\n  products: Product[];\n  loadingStatus: boolean;\n};\n\nexport const ProductList: React.FC<Props> = (props) => {\n  const { products, loadingStatus } = props;\n\n  if (loadingStatus) {\n    return (\n      <p>Loading products...</p>\n    );\n  }\n\n  return (\n    <ul>\n      <Grid>\n        {products.map(product => (\n          <Card product={product} key={product.id} />\n        ))}\n      </Grid>\n    </ul>\n  );\n};\n","import React from 'react';\nimport styles from './Container.module.scss';\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport const Container: React.FC<Props> = (props) => {\n  return (\n    <div className={styles.container}>{props.children}</div>\n  );\n};\n","import React from 'react';\nimport styles from './Pagination.module.scss';\n\ntype Props = {\n  productsPerPage: number;\n  productsNumber: number;\n  onPaginationListItem: (pageNumber: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const { productsPerPage, productsNumber, onPaginationListItem } = props;\n\n  const paginationLength = Math.ceil(productsNumber / productsPerPage);\n\n  const paginationList = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= paginationLength; i++) {\n    paginationList.push(i);\n  }\n\n  return (\n    <ul className={styles['pagination-list']}>\n      {paginationList.map(item => (\n        <li key={item} className={styles['pagination-list__item']}>\n          <a\n            href=\"!#\"\n            className={styles['pagination-list__link']}\n            onClick={() => onPaginationListItem(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './FilterByTitle.module.scss';\nimport { Button } from './Button';\n\ntype Props = {\n  onFilter: (title: string) => void;\n};\n\nexport const FilterByTitle: React.FC<Props> = (props) => {\n  const { onFilter } = props;\n\n  const [filterBy, setFilterBy] = useState('');\n  const [isClearFilter, setIsClearFilter] = useState(false);\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (filterBy) {\n          setIsClearFilter(true);\n        }\n\n        onFilter(filterBy);\n      }}\n    >\n      {isClearFilter && (\n        <Button\n          type=\"button\"\n          content=\"Clear Filter\"\n          onClick={() => {\n            setFilterBy('');\n            onFilter('');\n            setIsClearFilter(false);\n          }}\n        />\n      )}\n      <input\n        type=\"text\"\n        value={filterBy}\n        onChange={(event) => {\n          setFilterBy(event.target.value);\n        }}\n        className={styles.form__field}\n        placeholder=\"Enter the product title\"\n      />\n      <Button type=\"submit\" content=\"Filter\" />\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { getProducts } from './api/api';\nimport { Product } from './types/Product';\nimport { ProductList } from './components/ProductList';\nimport { Container } from './components/Container';\nimport { Pagination } from './components/Pagination';\nimport { FilterByTitle } from './components/FilterByTitle';\n\nexport const App: React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const productsFromApi = await getProducts();\n\n      setIsLoading(false);\n      setProducts(productsFromApi);\n      setFilteredProducts(productsFromApi);\n    })();\n  }, []);\n\n  const paginationHandler = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const filterByTitle = (title: string) => {\n    const currentFilteredProducts = [...products].filter((product: Product) => {\n      return product.title.toLowerCase().includes(title.toLowerCase());\n    });\n\n    setFilteredProducts(currentFilteredProducts);\n  };\n\n  const currentPageFirstProductIndex = currentPage * productsPerPage - productsPerPage;\n  const currentPageLastProductIndex = currentPage * productsPerPage;\n  const currentPageProducts = filteredProducts\n    .slice(currentPageFirstProductIndex, currentPageLastProductIndex);\n\n  return (\n    <Container>\n      <FilterByTitle onFilter={filterByTitle} />\n      <ProductList products={currentPageProducts} loadingStatus={isLoading} />\n      <Pagination\n        productsPerPage={productsPerPage}\n        productsNumber={filteredProducts.length}\n        onPaginationListItem={paginationHandler}\n      />\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}